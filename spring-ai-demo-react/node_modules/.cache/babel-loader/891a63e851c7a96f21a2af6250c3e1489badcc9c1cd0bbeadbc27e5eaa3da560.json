{"ast":null,"code":"var _jsxFileName = \"/Users/nicolegasperini/Documents/Spring/spring-ai-demo/spring-ai-demo-react/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const chatAI = async () => {\n    if (!imageFile) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n    try {\n      const response = await fetch('/chat-ai', {\n        method: 'POST',\n        body: prompt\n      });\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error generating text');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Talk to AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      placeholder: \"Enter a prompt for AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: askAI,\n      children: \"Ask AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: responseText && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Generated Text: \", responseText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatComponent, \"S1lK4b8P240vr4GGWfaaSHACfl0=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatComponent","_s","prompt","setPrompt","chatAI","imageFile","alert","response","fetch","method","body","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","askAI","responseText","_c","$RefreshReg$"],"sources":["/Users/nicolegasperini/Documents/Spring/spring-ai-demo/spring-ai-demo-react/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction ChatComponent() {\n    const [prompt, setPrompt] = useState('');\n\n    const chatAI = async () => {\n        if (!imageFile) {\n            alert(\"Please select a file first.\");\n            return;\n        }\n\n        try {\n            const response = await fetch('/chat-ai', {\n                method: 'POST',\n                body: prompt,\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            alert('Error generating text');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Talk to AI</h2>\n            <input\n                type=\"text\"\n                value={prompt}\n                onChange={(e) => setPrompt(e.target.value)}\n                placeholder=\"Enter a prompt for AI\"\n            />\n            <button onClick={askAI}>Ask AI</button>\n            <div>\n                {responseText && <p>Generated Text: {responseText}</p>}\n            </div>\n        </div>\n    );\n}\n\nexport default ChatComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,IAAI,CAACC,SAAS,EAAE;MACZC,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACJ;IAEA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,EAAE;QACrCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAER;MACV,CAAC,CAAC;IACN,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BL,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACJ,CAAC;EAED,oBACIP,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA;MACImB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,MAAO;MACdkB,QAAQ,EAAGC,CAAC,IAAKlB,SAAS,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,WAAW,EAAC;IAAuB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAEC,KAAM;MAAAZ,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvClB,OAAA;MAAAc,QAAA,EACKa,YAAY,iBAAI3B,OAAA;QAAAc,QAAA,GAAG,kBAAgB,EAACa,YAAY;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChB,EAAA,CAnCQD,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAqCtB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}