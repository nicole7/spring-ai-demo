{"ast":null,"code":"var _jsxFileName = \"/Users/nicolegasperini/Documents/Spring/spring-ai-demo/spring-ai-demo-react/src/components/Audio.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Audio() {\n  _s();\n  const [audioFile, setAudioFile] = useState(null);\n  const [responseText, setResponseText] = useState('');\n  const handleFileChange = event => {\n    setAudioFile(event.target.files[0]);\n  };\n  const audioAI = async () => {\n    if (!audioFile) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", audioFile);\n    try {\n      const response = await fetch('/audio-generated-text', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const result = await response.text();\n        setResponseText(result);\n        alert('Text generated successfully');\n      } else {\n        alert('Failed to generate text');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error generating text');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Audio File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: audioAI,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: responseText && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Generated Text: \", responseText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Audio, \"RO0QAc+IHl6fRo6wkqMvHoB3jnc=\");\n_c = Audio;\nexport default Audio;\nvar _c;\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Audio","_s","audioFile","setAudioFile","responseText","setResponseText","handleFileChange","event","target","files","audioAI","alert","formData","FormData","append","response","fetch","method","body","ok","result","text","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/nicolegasperini/Documents/Spring/spring-ai-demo/spring-ai-demo-react/src/components/Audio.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Audio() {\n    const [audioFile, setAudioFile] = useState(null);\n    const [responseText, setResponseText] = useState('');\n\n    const handleFileChange = (event) => {\n        setAudioFile(event.target.files[0]);\n    };\n\n    const audioAI = async () => {\n        if (!audioFile) {\n            alert(\"Please select a file first.\");\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(\"file\", audioFile);\n\n        try {\n            const response = await fetch('/audio-generated-text', {\n                method: 'POST',\n                body: formData,\n            });\n\n            if (response.ok) {\n                const result = await response.text();\n                setResponseText(result);\n                alert('Text generated successfully');\n            } else {\n                alert('Failed to generate text');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            alert('Error generating text');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Add Audio File</h2>\n            <input\n                type=\"file\"\n                onChange={handleFileChange}\n            />\n            <button onClick={audioAI}>Add</button>\n            <div>\n                {responseText && <p>Generated Text: {responseText}</p>}\n            </div>\n        </div>\n    );\n}\n\nexport default Audio;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAChCJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI,CAACR,SAAS,EAAE;MACZS,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,SAAS,CAAC;IAElC,IAAI;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;QAClDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACb,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACpChB,eAAe,CAACe,MAAM,CAAC;QACvBT,KAAK,CAAC,6BAA6B,CAAC;MACxC,CAAC,MAAM;QACHA,KAAK,CAAC,yBAAyB,CAAC;MACpC;IACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BX,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB7B,OAAA;MACI8B,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAExB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF7B,OAAA;MAAQgC,OAAO,EAAErB,OAAQ;MAAAc,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtC7B,OAAA;MAAAyB,QAAA,EACKpB,YAAY,iBAAIL,OAAA;QAAAyB,QAAA,GAAG,kBAAgB,EAACpB,YAAY;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3B,EAAA,CAjDQD,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAmDd,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}